"""adding organization table

Revision ID: 1d26dad81188
Revises: 36d9cfe04f70
Create Date: 2025-06-12 16:44:02.823295

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "1d26dad81188"
down_revision: Union[str, None] = "36d9cfe04f70"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "git_organization",
        sa.Column("id", sa.VARCHAR(length=255), nullable=False),
        sa.Column("oldId", sa.VARCHAR(length=255), nullable=True),
        sa.Column("avatarUrl", sa.VARCHAR(length=4096), nullable=True),
        sa.Column("email", sa.VARCHAR(length=255), nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), nullable=False),
        sa.Column("login", sa.VARCHAR(length=255), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_git_organization_login"), "git_organization", ["login"], unique=False
    )
    op.create_index(
        op.f("ix_git_organization_oldId"), "git_organization", ["oldId"], unique=False
    )
    op.add_column(
        "repository",
        sa.Column(
            "ownerIsOrganization", mysql.TINYINT(display_width=1), nullable=False
        ),
    )
    op.add_column(
        "repository", sa.Column("ownerIdUser", sa.VARCHAR(length=255), nullable=True)
    )
    op.add_column(
        "repository",
        sa.Column("ownerIdOrganization", sa.VARCHAR(length=255), nullable=True),
    )
    op.drop_constraint("repository_ibfk_1", "repository", type_="foreignkey")
    op.drop_index("ix_repository_ownerId", table_name="repository")
    op.create_index(
        op.f("ix_repository_ownerIdOrganization"),
        "repository",
        ["ownerIdOrganization"],
        unique=False,
    )
    op.create_index(
        op.f("ix_repository_ownerIdUser"), "repository", ["ownerIdUser"], unique=False
    )
    op.create_index(
        op.f("ix_repository_ownerIsOrganization"),
        "repository",
        ["ownerIsOrganization"],
        unique=False,
    )
    op.create_foreign_key(
        None, "repository", "git_organization", ["ownerIdOrganization"], ["id"]
    )
    op.create_foreign_key(None, "repository", "git_user", ["ownerIdUser"], ["id"])
    op.drop_column("repository", "ownerId")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "repository", sa.Column("ownerId", mysql.VARCHAR(length=255), nullable=False)
    )
    op.drop_constraint(None, "repository", type_="foreignkey")
    op.drop_constraint(None, "repository", type_="foreignkey")
    op.create_foreign_key(
        "repository_ibfk_1", "repository", "git_user", ["ownerId"], ["id"]
    )
    op.drop_index(op.f("ix_repository_ownerIsOrganization"), table_name="repository")
    op.drop_index(op.f("ix_repository_ownerIdUser"), table_name="repository")
    op.drop_index(op.f("ix_repository_ownerIdOrganization"), table_name="repository")
    op.create_index("ix_repository_ownerId", "repository", ["ownerId"], unique=False)
    op.drop_column("repository", "ownerIdOrganization")
    op.drop_column("repository", "ownerIdUser")
    op.drop_column("repository", "ownerIsOrganization")
    op.drop_index(op.f("ix_git_organization_oldId"), table_name="git_organization")
    op.drop_index(op.f("ix_git_organization_login"), table_name="git_organization")
    op.drop_table("git_organization")
    # ### end Alembic commands ###
